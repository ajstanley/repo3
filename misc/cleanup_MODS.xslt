<?xml version="1.0" encoding="UTF-8"?>
<!-- Cleanup of MODS generated by form. Apply this xslt before storing MODS in datastream. -->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns="http://www.loc.gov/mods/v3" xmlns:mods="http://www.loc.gov/mods/v3" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" exclude-result-prefixes="mods">
	<xsl:output method="xml" version="1.0" encoding="UTF-8" indent="yes" media-type="text/xml"/>
	<!-- copy everything -->
	<xsl:template match="@*|node()"><xsl:copy><xsl:apply-templates select="@*|node()"/></xsl:copy></xsl:template>
	<!-- remove empty attributes -->
	<xsl:template match="@*[.='']"/>
	<!-- remove xlinks ending with ':' (often resulting from example prefix: in form) -->
	<xsl:template match="@xlink:href[substring-after(.,':')='']"/>
	<!-- mods elements need special treatment - see below -->
	<xsl:template match="mods:*"><xsl:call-template name="modsElement"/></xsl:template>
	<!-- remove mods elements without text nodes in itself or descendants -->
	<xsl:template match="mods:*[normalize-space(.)='']" priority="1"/>
	<!-- but keep if there is a real xlink (not ending in ':') -->
	<xsl:template match="/mods:mods/mods:*[substring-after(@xlink:href,':')!='']" priority="2"><xsl:call-template name="modsElement"/></xsl:template>
	<!-- sort children of root mods element, add schema location -->
	<xsl:template match="/mods:mods">
		<mods version="3.4" xsi:schemaLocation="http://www.loc.gov/mods/v3 http://www.loc.gov/standards/mods/v3/mods-3-4.xsd">
			<xsl:for-each select="*">
				<xsl:sort select="name()"/>
				<xsl:sort select="@xlink:title"/>
				<xsl:apply-templates select="."/>
			</xsl:for-each>
		</mods>
	</xsl:template>
	<!-- sort children of location -->
	<xsl:template match="mods:location">
		<location>
			<xsl:apply-templates select="@*"/>
			<xsl:apply-templates select="mods:physicalLocation"/>
			<xsl:apply-templates select="mods:shelfLocator"/>
			<xsl:apply-templates select="mods:url"/>
			<xsl:apply-templates select="mods:holdingSimple"/>
			<xsl:apply-templates select="mods:holdingExternal"/>
		</location>
	</xsl:template>
	<!-- sort children of cartographics -->
	<xsl:template match="mods:cartographics">
		<cartographics>
			<xsl:apply-templates select="@*"/>
			<xsl:apply-templates select="mods:scale"/>
			<xsl:apply-templates select="mods:projection"/>
			<xsl:apply-templates select="mods:coordinates"/>
		</cartographics>
	</xsl:template>
	<!-- copy mods element without mods: prefixed namespace declaration from source -->
	<xsl:template name="modsElement"><xsl:element name="{local-name()}"><xsl:apply-templates select="@*|node()"/></xsl:element></xsl:template>
</xsl:stylesheet>